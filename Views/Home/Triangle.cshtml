@model Practical8.Models.Triangle

@{
    ViewBag.Title = "Triangle";
}

<h2>Add a Triangle</h2>

@using (Html.BeginForm("AddTriangle", "home", FormMethod.Post))
{

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row my-2">
            @Html.LabelFor(m => m.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            var colorOptions = new[] {
                new SelectListItem { Text = "", Value = "" },
                new SelectListItem { Text = "Red", Value = "#F1472E" },
                new SelectListItem { Text = "Orange", Value = "#ff8000" },
                new SelectListItem { Text = "Yellow", Value = "#ffff00" },
                new SelectListItem { Text = "Green", Value = "#40ff00" }
            };
        }

        <div class="form-group row my-2">
            @Html.Label("FillColour", "Fill", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FillColour", colorOptions, new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.Fill, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            @Html.Label("StrokeColour", "Stroke Colour", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StrokeColour", colorOptions, new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.StrokeColour, "", new { @class = "text-danger" })
            </div>
        </div>

        @foreach (var prop in new[] {
            new { Name = nameof(Model.StrokeWidth), Label = "Stroke Width" },
            new { Name = nameof(Model.X), Label = "X" },
            new { Name = nameof(Model.Y), Label = "Y" },
            new { Name = nameof(Model.BaseLength), Label = "Base" },
            new { Name = nameof(Model.Height), Label = "Height" }
        })
        {
            <div class="form-group row my-2">
                <label class="control-label col-md-2">@prop.Label</label>
                <div class="col-md-10">
                    @Html.Editor(prop.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage(prop.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group row my-2">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
